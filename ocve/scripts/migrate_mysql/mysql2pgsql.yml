
# if a socket is specified we will use that
# if tcp is chosen you can use compression
mysql:
 hostname: localhost
 port: 3306
 socket: /tmp/mysql.sock
 username: root
 password: 
 database: ocve2real
 compress: false
destination:
 # if file is given, output goes to file, else postgres mysql_data_only.sql
 file:
 postgres:
  hostname: db-pg-1.cch.kcl.ac.uk
  port: 5432
  username:
  password: 
  database: app_ocve_merged

# if tables is given, only the listed tables will be converted.  leave empty to convert all tables.
only_tables:
  ocve_accode                           
  ocve_country 
  ocve_city                             
  ocve_genre   
  ocve_collectiontype                                            
  ocve_instrument  
  ocve_year  
  ocve_printingmethod   
  ocve_opus
  ocve_publisher                        
  ocve_archive
  ocve_dedicatee                        
  ocve_editstatus 
  ocve_keymode                          
  ocve_keypitch                         
  ocve_barspine                         
  ocve_bar
  ocve_bar_barregion
  ocve_barregion 

  
#ocve.accode ocve.country ocve.city ocve.genre ocve.collectiontype ocve.instrument ocve.year ocve.printingmethod ocve.opus ocve.publisher ocve.archive ocve.dedicatee ocve.editstatus ocve.keymode ocve.keypitch ocve.barspine ocve.bar ocve.bar_barregion ocve.barregion 

# if exclude_tables is given, exclude the listed tables from the conversion.
#exclude_tables:
#  django
  #auth
  #blog
#- table3
#- table4

# if supress_data is true, only the schema definition will be exported/migrated, and not the data
supress_data: false

# if supress_ddl is true, only the data will be exported/imported, and not the schema
supress_ddl: true

# if force_truncate is true, forces a table truncate before table loading
force_truncate: true
